package num2uah

import (
	"strconv"
	"testing"
)

func Test_Num2uah(t *testing.T) {
	tests := []struct {
		arg  float64
		want string
	}{
		{0.00, "нуль гривень та нуль копійок"},
		{2_002.02, "дві тисячі дві гривні та дві копійки"},
		{1_001_001.00, "один мільйон одна тисяча одна гривня та нуль копійок"},
		{1_111_111.01, "один мільйон сто одинадцять тисяч сто одинадцять гривень та одна копійка"},
		{2_222_222.02, "два мільйона двісті двадцять дві тисячі двісті двадцять дві гривні та дві копійки"},
		{3_333_333.03, "три мільйона триста тридцять три тисячі триста тридцять три гривні та три копійки"},
		{4_444_444.04, "чотири мільйона чотириста сорок чотири тисячі чотириста сорок чотири гривні та чотири копійки"},
		{5_555_555.05, "п'ять мільйонів п'ятсот п'ятдесят п'ять тисяч п'ятсот п'ятдесят п'ять гривень та п'ять копійок"},
		{11_011_011.11, "одинадцять мільйонів одинадцять тисяч одинадцять гривень та одинадцять копійок"},
		{12_012_012.11, "дванадцять мільйонів дванадцять тисяч дванадцять гривень та одинадцять копійок"},
		{21_021_021.21, "двадцять один мільйон двадцять одна тисяча двадцять одна гривня та двадцять одна копійка"},
		{32_032_032.32, "тридцять два мільйона тридцять дві тисячі тридцять дві гривні та тридцять дві копійки"},
		{55_055_055.55, "п'ятдесят п'ять мільйонів п'ятдесят п'ять тисяч п'ятдесят п'ять гривень та п'ятдесят п'ять копійок"},
	}
	for _, tt := range tests {
		arg := strconv.FormatFloat(tt.arg, 'f', -1, 64)
		t.Run(arg, func(t *testing.T) {
			if got := Convert(tt.arg); got != tt.want {
				t.Errorf("Convert(%s) = \"%v\", want \"%v\"", arg, got, tt.want)
			}
		})
	}
}
